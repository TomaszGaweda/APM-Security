
package com.compuware.identity.authentication.repo.jira.webservice.login;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "LoginWebserviceService", targetNamespace = "http://login.webservice.dtmanager.dynatrace.com/", wsdlLocation = "classpath:loginwebservice.wsdl")
//@HandlerChain(file = "handlers.xml")
public class LoginWebserviceService
    extends Service
{

    private final static URL LOGINWEBSERVICESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.compuware.identity.authentication.repo.jira.webservice.login.LoginWebserviceService.class.getName());

    static {
        URL url = LoginWebserviceService.class.getClassLoader().getResource("loginwebservice.wsdl");
        if (url == null) {
        	logger.log(Level.WARNING, "Cannot initialize the default wsdl from {0}", "classpath:loginwebservice.wsdl");
        }
        LOGINWEBSERVICESERVICE_WSDL_LOCATION = url;
    }

    public LoginWebserviceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LoginWebserviceService() {
        super(LOGINWEBSERVICESERVICE_WSDL_LOCATION, new QName("http://login.webservice.dtmanager.dynatrace.com/", "LoginWebserviceService"));
    }

    /**
     * 
     * @return
     *     returns LoginWebservice
     */
    @WebEndpoint(name = "LoginWebservicePort")
    public LoginWebservice getLoginWebservicePort() {
        return super.getPort(new QName("http://login.webservice.dtmanager.dynatrace.com/", "LoginWebservicePort"), LoginWebservice.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LoginWebservice
     */
    @WebEndpoint(name = "LoginWebservicePort")
    public LoginWebservice getLoginWebservicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://login.webservice.dtmanager.dynatrace.com/", "LoginWebservicePort"), LoginWebservice.class, features);
    }

}
